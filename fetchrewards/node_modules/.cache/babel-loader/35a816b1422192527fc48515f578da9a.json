{"ast":null,"code":"var _jsxFileName = \"/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/productlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./productlist.css\"; //constructor comes first to load the function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Productmaker = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `productWrapper`,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'productHeader',\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"banner\",\n      src: `${props.record.image}`,\n      alt: \"productimg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'productInfo',\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"productName\",\n        children: props.record.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'postText'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.record.detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"points\",\n      children: props.record.points\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Quick Buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this); //export productlist\n\n\n_c = Productmaker;\nexport default function ProductList() {\n  _s();\n\n  const [records, setRecords] = useState([]); // This method fetches the records from the \"server\", for \"databases\" stored in local library public.\n  //super easy to use mongoose to create schemes to load into react if i need to connect to mongodb.\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await axios.get(\"productlist.json\");\n      const records = response.data;\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // sorts the product by increasing point value. can be other things like \"Popularity Ranking\", if my database was big enough.\n\n  const sortedProduct = records.sort((a, b) => {\n    return a.points - b.points;\n  }); // This method will run ProductMaker for the amount of records there are.\n\n  function products() {\n    return sortedProduct.map(record => {\n      return /*#__PURE__*/_jsxDEV(Productmaker, {\n        record: record\n      }, record.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this);\n    });\n  }\n\n  axios.get('/user_login', {\n    params: {\n      username: 'john1904'\n    }\n  }).then(function (response) {\n    console.log(response);\n  }); //fetch points database\n\n  const [record2, setPoints] = useState([]);\n  useEffect(() => {\n    async function getPoints() {\n      const response1 = await axios.get(\"points.json\");\n      const record2 = response1.data;\n      setPoints(record2);\n    }\n\n    getPoints();\n    return;\n  }, [record2.length]); //Math.floor easily turns strings into integers\n\n  function remainingpoints() {\n    return record2.reduce(function (sum, record) {\n      return sum + Math.floor(record.points);\n    }, 0);\n  }\n\n  const pointbalance = processPayment();\n\n  async function processPayment(e) {\n    e.preventDefault();\n    const message = \"you do not have enough point!\";\n    window.alert(message);\n    console.log(message);\n    return;\n  }\n\n  ; // This following section will display the table with the records of products.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      maxHeight: '100vh',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Total Remaining Points! \", remainingpoints()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: processPayment,\n      children: products()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 4\n  }, this);\n}\n\n_s(ProductList, \"Hn5oQGI9HkBGacT+SmnICEEANUk=\");\n\n_c2 = ProductList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Productmaker\");\n$RefreshReg$(_c2, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Productmaker","props","record","image","name","detail","points","ProductList","records","setRecords","getRecords","response","get","data","length","sortedProduct","sort","a","b","products","map","params","username","then","console","log","record2","setPoints","getPoints","response1","remainingpoints","reduce","sum","Math","floor","pointbalance","processPayment","e","preventDefault","message","window","alert","maxHeight","overflowY"],"sources":["/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/productlist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./productlist.css\"\n\n\n\n\n//constructor comes first to load the function\nconst Productmaker = (props) => \n(\n  <div className={`productWrapper`}>\n                    <div className={'productHeader'} >\n                    <img className=\"banner\" src={`${props.record.image}`} alt=\"productimg\"/>\n                        <div className={'productInfo'}>\n                            <h2 className=\"productName\">{props.record.name}</h2>\n                        </div>\n                        <p className={'postText'}/><p>{props.record.detail}</p>\n                        <p className=\"points\">{props.record.points}</p>\n                        </div>\n                        <button>Quick Buy</button>\n                </div>\n);\n\n//export productlist\nexport default function ProductList() {\n const [records, setRecords] = useState([]);\n \n // This method fetches the records from the \"server\", for \"databases\" stored in local library public.\n //super easy to use mongoose to create schemes to load into react if i need to connect to mongodb.\n\n useEffect(() => {\n  async function getRecords() {\n    const response = await axios.get(\"productlist.json\");\n    const records = response.data\n    setRecords(records);\n  }\n\n  getRecords();\n\n   return;\n }, [records.length]);\n\n // sorts the product by increasing point value. can be other things like \"Popularity Ranking\", if my database was big enough.\n const sortedProduct = records.sort((a, b) => {\n  return ((a.points)- (b.points));\n})\n\n\n\n // This method will run ProductMaker for the amount of records there are.\n function products() {\n   return sortedProduct.map((record) => {\n     \n     return (\n       <Productmaker\n         record={record}\n         key={record.name}\n       />\n     );\n   });\n }\n \n\n axios.get('/user_login', {\n\tparams: {\n\t\tusername: 'john1904',\n\t}\n})\n.then(function (response) {\n\tconsole.log(response);\n})\n\n//fetch points database\nconst [record2, setPoints] = useState([]);\n    \n    useEffect(() => {\n     async function getPoints() {\n       const response1 = await axios.get(\"points.json\");\n       const record2 = response1.data\n       setPoints(record2);\n     }\n   \n     getPoints();\n   \n      return;\n    }, [record2.length]);\n\n     //Math.floor easily turns strings into integers\n\n    function remainingpoints() {\n      return record2.reduce(function (sum, record) {\n        return sum + Math.floor(record.points);\n    }, 0);\n    }\n\n const pointbalance = processPayment()\n\n    async function processPayment(e) {\n      e.preventDefault();\n        const message = \"you do not have enough point!\"\n        window.alert(message);\n        console.log(message)\n        return;\n      };\n\n // This following section will display the table with the records of products.\n return (\n   <div className= \"background\" style={{ maxHeight: '100vh', overflowY:'auto'}}>\n     <h3>Your Total Remaining Points! {remainingpoints()}</h3>\n       <div onChange={processPayment}>{products()}</div>\n   </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}