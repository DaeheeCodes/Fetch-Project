{"ast":null,"code":"var _jsxFileName = \"/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit() {\n  _s();\n\n  const [form, setForm] = useState({\n    postnumber: \"\",\n    photo: \"\",\n    title: \"\",\n    date: \"\",\n    content: \"\"\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`/blogpost/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/admin\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPost = {\n      postnumber: form.postnumber,\n      photo: form.photo,\n      title: form.title,\n      date: form.date,\n      content: form.content\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`/blogpost/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPost),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/admin\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Devnotes --> Blogpost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postnumber\",\n          children: \"Post Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formSubmitter\",\n          id: \"postnumber\",\n          value: form.postnumber,\n          onChange: e => updateForm({\n            postnumber: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photo\",\n          children: \"Photo URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formSubmitter\",\n          id: \"photo\",\n          value: form.photo,\n          onChange: e => updateForm({\n            photo: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formSubmitter\",\n          id: \"title\",\n          value: form.title,\n          onChange: e => updateForm({\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"formSubmitter\",\n          id: \"date\",\n          value: form.date,\n          onChange: e => updateForm({\n            date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"formSubmitter\",\n          id: \"content\",\n          value: form.content,\n          onChange: e => updateForm({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formSubmit\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Post\",\n          className: \"submitButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"8mTFPucvaYQ0XUDirAtR2vXaIDI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Edit","form","setForm","postnumber","photo","title","date","content","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPost","method","body","JSON","stringify","headers","target"],"sources":["/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/edit.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n const [form, setForm] = useState({\n    postnumber: \"\",\n    photo: \"\",\n    title: \"\",\n    date: \"\",\n    content: \"\",\n });\n const params = useParams();\n const navigate = useNavigate();\n \n useEffect(() => {\n   async function fetchData() {\n     const id = params.id.toString();\n     const response = await fetch(`/blogpost/record/${params.id.toString()}`);\n \n     if (!response.ok) {\n       const message = `An error has occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const record = await response.json();\n     if (!record) {\n       window.alert(`Record with id ${id} not found`);\n       navigate(\"/admin\");\n       return;\n     }\n \n     setForm(record);\n   }\n \n   fetchData();\n \n   return;\n }, [params.id, navigate]);\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n async function onSubmit(e) {\n   e.preventDefault();\n   const editedPost = {\n     postnumber: form.postnumber,\n     photo: form.photo,\n     title: form.title,\n     date: form.date,\n     content: form.content,\n   };\n \n   // This will send a post request to update the data in the database.\n   await fetch(`/blogpost/update/${params.id}`, {\n     method: \"POST\",\n     body: JSON.stringify(editedPost),\n     headers: {\n       'Content-Type': 'application/json'\n     },\n   });\n \n   navigate(\"/admin\");\n }\n \n // This following section will display the form that takes input from the user to update the data.\n return (\n    <div>\n      <h3>Create New Devnotes --&gt; Blogpost</h3>\n      <form onSubmit={onSubmit}>\n      <div className=\"formContainer\">\n          <label htmlFor=\"postnumber\">Post Number</label>\n          <input\n            type=\"text\"\n            className=\"formSubmitter\"\n            id=\"postnumber\"\n            value={form.postnumber}\n            onChange={(e) => updateForm({ postnumber: e.target.value })}\n          />\n        </div>\n      <div className=\"formContainer\">\n          <label htmlFor=\"photo\">Photo URL</label>\n          <input\n            type=\"text\"\n            className=\"formSubmitter\"\n            id=\"photo\"\n            value={form.photo}\n            onChange={(e) => updateForm({ photo: e.target.value })}\n          />\n        </div>\n        <div className=\"formContainer\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            className=\"formSubmitter\"\n            id=\"title\"\n            value={form.title}\n            onChange={(e) => updateForm({ title: e.target.value })}\n          />\n        </div>\n        <div className=\"formContainer\">\n         <label htmlFor=\"date\">Date</label>\n         <input\n           type=\"date\"\n           className=\"formSubmitter\"\n           id=\"date\"\n           value={form.date}\n           onChange={(e) => updateForm({ date: e.target.value })}\n         />\n       </div>\n        <div className=\"formContainer\">\n          <label htmlFor=\"content\">Content</label>\n          <input\n            type=\"text\"\n            className=\"formSubmitter\"\n            id=\"content\"\n            value={form.content}\n            onChange={(e) => updateForm({ content: e.target.value })}\n          />\n        </div>\n        <div className=\"formSubmit\">\n         <input\n           type=\"submit\"\n           value=\"Update Post\"\n           className=\"submitButton\"\n         />\n       </div>\n      </form>\n    </div>\n  );\n }"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,cAAvC;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAC9BO,UAAU,EAAE,EADkB;IAE9BC,KAAK,EAAE,EAFuB;IAG9BC,KAAK,EAAE,EAHuB;IAI9BC,IAAI,EAAE,EAJwB;IAK9BC,OAAO,EAAE;EALqB,CAAD,CAAhC;EAOA,MAAMC,MAAM,GAAGV,SAAS,EAAxB;EACA,MAAMW,QAAQ,GAAGV,WAAW,EAA5B;EAEAF,SAAS,CAAC,MAAM;IACd,eAAea,SAAf,GAA2B;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAX;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oBAAmBN,MAAM,CAACG,EAAP,CAAUC,QAAV,EAAqB,EAA1C,CAA5B;;MAEA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAMC,OAAO,GAAI,0BAAyBH,QAAQ,CAACI,UAAW,EAA9D;QACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;QACA;MACD;;MAED,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB;;MACA,IAAI,CAACD,MAAL,EAAa;QACXF,MAAM,CAACC,KAAP,CAAc,kBAAiBR,EAAG,YAAlC;QACAF,QAAQ,CAAC,QAAD,CAAR;QACA;MACD;;MAEDP,OAAO,CAACkB,MAAD,CAAP;IACD;;IAEDV,SAAS;IAET;EACD,CAxBQ,EAwBN,CAACF,MAAM,CAACG,EAAR,EAAYF,QAAZ,CAxBM,CAAT,CAX8B,CAqC9B;;EACA,SAASa,UAAT,CAAoBC,KAApB,EAA2B;IACzB,OAAOrB,OAAO,CAAEsB,IAAD,IAAU;MACvB,OAAO,EAAE,GAAGA,IAAL;QAAW,GAAGD;MAAd,CAAP;IACD,CAFa,CAAd;EAGD;;EAED,eAAeE,QAAf,CAAwBC,CAAxB,EAA2B;IACzBA,CAAC,CAACC,cAAF;IACA,MAAMC,UAAU,GAAG;MACjBzB,UAAU,EAAEF,IAAI,CAACE,UADA;MAEjBC,KAAK,EAAEH,IAAI,CAACG,KAFK;MAGjBC,KAAK,EAAEJ,IAAI,CAACI,KAHK;MAIjBC,IAAI,EAAEL,IAAI,CAACK,IAJM;MAKjBC,OAAO,EAAEN,IAAI,CAACM;IALG,CAAnB,CAFyB,CAUzB;;IACA,MAAMO,KAAK,CAAE,oBAAmBN,MAAM,CAACG,EAAG,EAA/B,EAAkC;MAC3CkB,MAAM,EAAE,MADmC;MAE3CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAFqC;MAG3CK,OAAO,EAAE;QACP,gBAAgB;MADT;IAHkC,CAAlC,CAAX;IAQAxB,QAAQ,CAAC,QAAD,CAAR;EACD,CAhE6B,CAkE9B;;;EACA,oBACG;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEgB,QAAhB;MAAA,wBACA;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAO,OAAO,EAAC,YAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,eAFZ;UAGE,EAAE,EAAC,YAHL;UAIE,KAAK,EAAExB,IAAI,CAACE,UAJd;UAKE,QAAQ,EAAGuB,CAAD,IAAOJ,UAAU,CAAC;YAAEnB,UAAU,EAAEuB,CAAC,CAACQ,MAAF,CAASX;UAAvB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAWA;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,eAFZ;UAGE,EAAE,EAAC,OAHL;UAIE,KAAK,EAAEtB,IAAI,CAACG,KAJd;UAKE,QAAQ,EAAGsB,CAAD,IAAOJ,UAAU,CAAC;YAAElB,KAAK,EAAEsB,CAAC,CAACQ,MAAF,CAASX;UAAlB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXA,eAqBE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,eAFZ;UAGE,EAAE,EAAC,OAHL;UAIE,KAAK,EAAEtB,IAAI,CAACI,KAJd;UAKE,QAAQ,EAAGqB,CAAD,IAAOJ,UAAU,CAAC;YAAEjB,KAAK,EAAEqB,CAAC,CAACQ,MAAF,CAASX;UAAlB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF,eA+BE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACC;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,eAFZ;UAGE,EAAE,EAAC,MAHL;UAIE,KAAK,EAAEtB,IAAI,CAACK,IAJd;UAKE,QAAQ,EAAGoB,CAAD,IAAOJ,UAAU,CAAC;YAAEhB,IAAI,EAAEoB,CAAC,CAACQ,MAAF,CAASX;UAAjB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BF,eAyCE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACE;UAAO,OAAO,EAAC,SAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,eAFZ;UAGE,EAAE,EAAC,SAHL;UAIE,KAAK,EAAEtB,IAAI,CAACM,OAJd;UAKE,QAAQ,EAAGmB,CAAD,IAAOJ,UAAU,CAAC;YAAEf,OAAO,EAAEmB,CAAC,CAACQ,MAAF,CAASX;UAApB,CAAD;QAL7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzCF,eAmDE;QAAK,SAAS,EAAC,YAAf;QAAA,uBACC;UACE,IAAI,EAAC,QADP;UAEE,KAAK,EAAC,aAFR;UAGE,SAAS,EAAC;QAHZ;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAnDF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAgEC;;GAnIsBvB,I;UAQRF,S,EACEC,W;;;KATMC,I"},"metadata":{},"sourceType":"module"}