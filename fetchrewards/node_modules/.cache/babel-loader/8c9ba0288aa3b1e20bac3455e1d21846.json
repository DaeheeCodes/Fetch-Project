{"ast":null,"code":"var _jsxFileName = \"/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/productlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./productlist.css\";\nimport ProcessPayment from \"./ProcessPayment\"; //constructor comes first to load the function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Productmaker = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `productWrapper`,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'productHeader',\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"banner\",\n      src: `${props.record.image}`,\n      alt: \"productimg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'productInfo',\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"productName\",\n        children: props.record.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'postText'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.record.detail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"points\",\n      children: props.record.points\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: ProcessPayment,\n    children: \"Quick Buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this); //export productlist\n\n\n_c = Productmaker;\nexport default function ProductList() {\n  _s();\n\n  const [records, setRecords] = useState([]); // This method fetches the records from the \"server\", for \"databases\" stored in local library public.\n  //super easy to use mongoose to create schemes to load into react if i need to connect to mongodb.\n\n  useEffect(() => {\n    async function getRecords() {\n      const response = await axios.get(\"productlist.json\");\n      const records = response.data;\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // sorts the product by increasing point value. can be other things like \"Popularity Ranking\", if my database was big enough.\n\n  const sortedProduct = records.sort((a, b) => {\n    return a.points - b.points;\n  }); // This method will run ProductMaker for the amount of records there are.\n\n  function products() {\n    return sortedProduct.map(record => {\n      return /*#__PURE__*/_jsxDEV(Productmaker, {\n        record: record\n      }, record.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }, this);\n    });\n  }\n\n  async function getRecords() {\n    const response = await axios.get(\"points.json\");\n    const records = response.data;\n    setRecords(records);\n  }\n\n  function remainingpoints() {\n    return records.reduce(function (sum, record) {\n      return sum + Math.floor(record.points);\n    }, 0);\n  } //Math.floor easily turns strings into integers\n  // This following section will display the table with the records of products.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    style: {\n      maxHeight: '100vh',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: remainingpoints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 4\n  }, this);\n}\n\n_s(ProductList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c2 = ProductList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Productmaker\");\n$RefreshReg$(_c2, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProcessPayment","Productmaker","props","record","image","name","detail","points","ProductList","records","setRecords","getRecords","response","get","data","length","sortedProduct","sort","a","b","products","map","remainingpoints","reduce","sum","Math","floor","maxHeight","overflowY"],"sources":["/Users/dhc/Fetch-Project/fetchrewards/src/pages/databasecomponents/productlist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport \"./productlist.css\"\nimport ProcessPayment from \"./ProcessPayment\";\n\n//constructor comes first to load the function\nconst Productmaker = (props) => \n(\n  <div className={`productWrapper`}>\n                    <div className={'productHeader'} >\n                    <img className=\"banner\" src={`${props.record.image}`} alt=\"productimg\"/>\n                        <div className={'productInfo'}>\n                            <h2 className=\"productName\">{props.record.name}</h2>\n                        </div>\n                        <p className={'postText'}/><p>{props.record.detail}</p>\n                        <p className=\"points\">{props.record.points}</p>\n                        </div>\n                        <button onClick={ProcessPayment}>Quick Buy</button>\n                </div>\n);\n\n//export productlist\nexport default function ProductList() {\n const [records, setRecords] = useState([]);\n \n // This method fetches the records from the \"server\", for \"databases\" stored in local library public.\n //super easy to use mongoose to create schemes to load into react if i need to connect to mongodb.\n\n useEffect(() => {\n  async function getRecords() {\n    const response = await axios.get(\"productlist.json\");\n    const records = response.data\n    setRecords(records);\n  }\n\n  getRecords();\n\n   return;\n }, [records.length]);\n\n // sorts the product by increasing point value. can be other things like \"Popularity Ranking\", if my database was big enough.\n const sortedProduct = records.sort((a, b) => {\n  return ((a.points)- (b.points));\n})\n\n\n\n // This method will run ProductMaker for the amount of records there are.\n function products() {\n   return sortedProduct.map((record) => {\n     \n     return (\n       <Productmaker\n         record={record}\n         key={record.name}\n       />\n     );\n   });\n }\n \n\n async function getRecords() {\n  const response = await axios.get(\"points.json\");\n  const records = response.data\n  setRecords(records);\n}\n\n\nfunction remainingpoints() {\n return records.reduce(function (sum, record) {\n   return sum + Math.floor(record.points);\n}, 0);\n}\n\n\n\n \n //Math.floor easily turns strings into integers\n\n\n // This following section will display the table with the records of products.\n return (\n   <div className= \"background\" style={{ maxHeight: '100vh', overflowY:'auto'}}>\n        <h3>{remainingpoints}</h3>\n       <div>{products()}</div>\n   </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}